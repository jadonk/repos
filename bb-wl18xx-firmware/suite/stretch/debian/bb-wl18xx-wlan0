#!/bin/bash -e
#
# Copyright (c) 2016 Robert Nelson <robertcnelson@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

cal_bin="/usr/local/bin/calibrator"

check_for_nl80211 () {
	while : ; do
		unset is_driver_loaded
		is_driver_loaded=$(${cal_bin} --help 2>&1 || true)
		if [ "xnl80211 not found." = "x${is_driver_loaded}" ] ; then
			echo "nl80211 not found."
			sleep 5
		else
			echo "nl80211 found."
			break
		fi
	done
}

cylon_leds () {
	if [ -e /sys/class/leds/beaglebone\:green\:usr0/trigger ] ; then
		BASE=/sys/class/leds/beaglebone\:green\:usr
		old_trigger_0=$(cat ${BASE}0/trigger)
		old_trigger_1=$(cat ${BASE}1/trigger)
		echo none > ${BASE}0/trigger
		echo none > ${BASE}1/trigger

		STATE=1
		while : ; do
			case $STATE in
			1)	echo 255 > ${BASE}0/brightness
				echo 0   > ${BASE}1/brightness
				STATE=2
				;;
			2)	echo 255 > ${BASE}1/brightness
				echo 0   > ${BASE}0/brightness
				STATE=1
				;;
			*)	echo 255 > ${BASE}0/brightness
				echo 0   > ${BASE}1/brightness
				STATE=2
				;;
			esac
			sleep 0.1
		done
	fi
}

set_wlan_0_mac () {
	if [ -f ${firmware} ] ; then
		if [ -f ${cal_bin} ] ; then
			check_for_nl80211
			current_mac=$(${cal_bin} get nvs_mac ${firmware} | awk -F 'NVS: ' '{print $2}' | awk '{print toupper($0)}' || true)
			echo "${firmware}=[${current_mac}]"

			if [ ! "x${current_mac}" = "x${wlan_0_mac}" ] ; then
				cylon_leds & CYLON_PID=$!

				${cal_bin} set nvs_mac ${firmware} ${wlan_0_mac} || true

				echo "updating: /boot/initrd.img"
				update-initramfs -u
				sync
				echo "/boot/initrd.img: update complete"
				[ -e /proc/$CYLON_PID ]  && kill $CYLON_PID
				if [ -e /sys/class/leds/beaglebone\:green\:usr0/trigger ] ; then
					echo ${old_trigger_0} > /sys/class/leds/beaglebone\:green\:usr0/trigger
					echo ${old_trigger_1} > /sys/class/leds/beaglebone\:green\:usr1/trigger
				fi
			fi
		else
			firmware_dump=$(hexdump -ve '1/1 "%.2x"' ${firmware} -n 12 | awk '{print toupper($0)}')
			offset0=$(echo ${firmware_dump} | cut -b 23-24)
			offset1=$(echo ${firmware_dump} | cut -b 21-22)
			offset2=$(echo ${firmware_dump} | cut -b 13-14)
			offset3=$(echo ${firmware_dump} | cut -b 11-12)
			offset4=$(echo ${firmware_dump} | cut -b 9-10)
			offset5=$(echo ${firmware_dump} | cut -b 7-8)
			current_mac="${offset0}:${offset1}:${offset2}:${offset3}:${offset4}:${offset5}"
			echo "${firmware}=[${current_mac}]"

			if [ ! "x${current_mac}" = "x${wlan_0_mac}" ] ; then
				cylon_leds & CYLON_PID=$!

				offset0=$(echo ${wlan_0_mac} | cut -b 1-2)
				offset1=$(echo ${wlan_0_mac} | cut -b 4-5)
				offset2=$(echo ${wlan_0_mac} | cut -b 7-8)
				offset3=$(echo ${wlan_0_mac} | cut -b 10-11)
				offset4=$(echo ${wlan_0_mac} | cut -b 13-14)
				offset5=$(echo ${wlan_0_mac} | cut -b 16-17)

				printf '\x'${offset0}'' | dd conv=notrunc of=${firmware} bs=1 seek=$((0x0000000b)) status=none
				printf '\x'${offset1}'' | dd conv=notrunc of=${firmware} bs=1 seek=$((0x0000000a)) status=none
				printf '\x'${offset2}'' | dd conv=notrunc of=${firmware} bs=1 seek=$((0x00000006)) status=none
				printf '\x'${offset3}'' | dd conv=notrunc of=${firmware} bs=1 seek=$((0x00000005)) status=none
				printf '\x'${offset4}'' | dd conv=notrunc of=${firmware} bs=1 seek=$((0x00000004)) status=none
				printf '\x'${offset5}'' | dd conv=notrunc of=${firmware} bs=1 seek=$((0x00000003)) status=none

				echo "Writing mac address ${wlan_0_mac} to file ${firmware}"

				echo "updating: /boot/initrd.img"
				update-initramfs -u
				sync
				echo "/boot/initrd.img: update complete"
				[ -e /proc/$CYLON_PID ]  && kill $CYLON_PID
				if [ -e /sys/class/leds/beaglebone\:green\:usr0/trigger ] ; then
					echo ${old_trigger_0} > /sys/class/leds/beaglebone\:green\:usr0/trigger
					echo ${old_trigger_1} > /sys/class/leds/beaglebone\:green\:usr1/trigger
				fi
			fi
		fi
	fi
}

set_wlan_0_mac_from_eeprom () {
	wlan_0_mac=$(hexdump -e '8/1 "%c"' ${eeprom} -n 72 | tail -1 | cut -b 5-8 || true)
	if [ ! "x${wlan_0_mac}" = "xA335" ] ; then
		wlan_0_mac=$(hexdump -e '8/1 "%c"' ${eeprom} -n 72 | tail -1 | cut -b 5-16 | sed 's/\(..\)/\1:/g;s/:$//' | awk '{print toupper($0)}' || true)
	fi
	echo "wlan_0_mac=[${wlan_0_mac}]"
	set_wlan_0_mac
}

set_wlan_0_mac_from_cpsw_0 () {
	mac_address="/proc/device-tree/ocp/ethernet@4a100000/slave@4a100200/mac-address"
	if [ -f ${mac_address} ] ; then
		cpsw_0_mac=$(hexdump -v -e '1/1 "%02X" ":"' ${mac_address} | sed 's/.$//' | awk '{print toupper($0)}')
	else
		#todo: generate random mac... (this is a development tre board in the lab...)
		cpsw_0_mac="1C:BA:8C:A2:ED:68"
	fi
	wlan_0_mac="${cpsw_0_mac}"
	echo "wlan_0_mac=[${wlan_0_mac}]"
	set_wlan_0_mac
}

board=$(cat /proc/device-tree/model | sed "s/ /_/g")
case "${board}" in
TI_AM335x_BeagleBone_Green_Wireless)
	eeprom="/sys/bus/i2c/devices/0-0050/eeprom"
	firmware="/lib/firmware/ti-connectivity/wl1271-nvs.bin"
	set_wlan_0_mac_from_eeprom
	;;
TI_AM335x_BeagleBone_Black_Wireless)
	firmware="/lib/firmware/ti-connectivity/wl1271-nvs.bin"
	set_wlan_0_mac_from_cpsw_0
	;;
TI_AM335x_BeagleBone_Blue)
	firmware="/lib/firmware/ti-connectivity/wl1271-nvs.bin"
	set_wlan_0_mac_from_cpsw_0
	;;
*)
	;;
esac

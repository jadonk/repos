From: Jérémy Lal <kapouer@melix.org>
Last-Update: 2014-08-05
Description: provide a simple string-oriented API that make this module
 a straightforward replacement for ansicolors, ansistyles.
Forwarded: https://github.com/TooTallNate/ansi.js/pull/17
--- a/README.md
+++ b/README.md
@@ -68,6 +68,9 @@
 
 // Clean up after yourself!
 cursor.reset()
+
+// a string-oriented API is provided too
+console.log(ansi.underline(ansi.bgGrey(ansi.red('this is red'))));
 ```
 
 
--- a/lib/ansi.js
+++ b/lib/ansi.js
@@ -403,3 +403,30 @@
   }
   return rtn
 }
+
+/**
+ * ansi.<color>(string), ansi.bg<Color>(string), ansi.<style>(string)
+ */
+
+function strHelper(g, key, str) {
+  var stream = {
+    str: '',
+    write: function(str) {this.str += str;},
+    on: function(){},
+    listeners: function() {return [];}
+  };
+  var cursor = ansi(stream, {enabled: true});
+  var the = g ? cursor[g] : cursor;
+  the[key]().write(str).reset();
+  return stream.str;
+}
+
+Object.keys(colors).forEach(function(key) {
+  var name = key.charAt(0).toUpperCase() + key.substring(1);
+  ansi[key] = strHelper.bind(undefined, 'fg', key);
+  ansi['bg' + name] = strHelper.bind(undefined, 'bg', key);
+});
+Object.keys(styles).forEach(function(key) {
+  ansi[key] = strHelper.bind(undefined, false, key);
+});
+

#!/bin/sh
#
# see: dh_installdeb(1)

set -e

package="ipumm-dra7xx-installer"
extract_dir="/lib/firmware/"

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

remove_file () {
	if [ -f /var/cache/${package}/${wfile} ] ; then
		rm -f /var/cache/${package}/${wfile}
	fi
}

remove_dir () {
	if [ -d ${wdir} ] ; then
		rm -rf ${wdir}
	fi
}

remove_all() {
	wfile="/var/cache/${package}/ipumm-dra7xx-evm-3.00.07.02.tar.gz" ; remove_file
	wfile="/var/cache/${package}/ipumm-dra7xx-evm-3.00.08.01.tar.gz" ; remove_file
	wfile="/var/cache/${package}/ipumm-dra7xx-evm-3.00.08.02.tar.gz" ; remove_file

	#Always keep the current one for quick reinstalls...
	#wfile="/var/cache/${package}/ipumm-dra7xx-evm-3.00.09.01.tar.gz" ; remove_file

	wfile="${extract_dir}dra7-ipu2-fw.xem4" ; remove_file
	wfile="${extract_dir}dra7xx-m4-ipu2.xem4" ; remove_file
}

case "$1" in
    remove|upgrade|deconfigure)
	remove_all
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


